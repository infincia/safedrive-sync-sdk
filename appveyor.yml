environment:
  global:
    PROJECT_NAME: safedrive-cli
    TEST_USER:
      secure: l9NGI3oeUceB/UpM5Bnz1GZmXu+Ffqn8VpY1QrY5vKMayVSMKLbu3dDd+JGRYpcd
    TEST_PASSWORD:
      secure: 0KxiBlc00CJbHhy1jkz4Yg==
  matrix:
    - PLATFORM: Win32
      TARGET: i686-pc-windows-msvc
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      CONFIGURATION: Release
      TOOLSET: v141_xp
    - PLATFORM: x64
      TARGET: x86_64-pc-windows-msvc
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      CONFIGURATION: Release
      TOOLSET: v141_xp

# Install Rust and Cargo
# (Based on from https://github.com/rust-lang/libc/blob/master/appveyor.yml)
install:
  - ci\install.cmd %PLATFORM%

# 'cargo test' takes care of building for us, so disable Appveyor's build stage. This prevents
# the "directory does not contain a project or solution file" error.
# source: https://github.com/starkat99/appveyor-rust/blob/master/appveyor.yml#L113
build: false

test_script:
  - unit.cmd %PLATFORM% %TOOLSET% %CONFIGURATION%

build_script:
  - release.cmd %PLATFORM% %TOOLSET% %CONFIGURATION%

before_deploy:
  - 7z a %PROJECT_NAME%-%APPVEYOR_REPO_TAG_NAME%-%PLATFORM%.zip target\%TARGET%\%CONFIGURATION%\safedrive.exe
  - appveyor PushArtifact ../%PROJECT_NAME%-%APPVEYOR_REPO_TAG_NAME%-%PLATFORM%.zip

deploy:
  description: 'SafeDrive CLI'
  # All the zipped artifacts will be deployed
  artifact: /.*\.zip/
  # TODO Regenerate this auth_token for your project, this one won't work for you. Here's how:
  # - Go to 'https://github.com/settings/tokens/new' and generate a Token with only the
  # `public_repo` scope enabled
  # - Then go to 'https://ci.appveyor.com/tools/encrypt' and enter the newly generated token.
  # - Enter the "encrypted value" below
  auth_token:
    secure: cW2lNuSBqYoZhkWPcNmD/QQ5gyvXu7oM0etZqA9hvnu/BqRSWgDuiKvYWrGsHPIZ
  provider: GitHub
  # deploy when a new tag is pushed
  on:
    appveyor_repo_tag: true

branches:
  only:
    - master
    # IMPORTANT Regex to match tags. Required, or appveyor may not trigger deploys when a new tag
    # is pushed. This regex matches semantic versions like v1.2.3-rc4+2016.02.22
    - /^v\d+\.\d+\.\d+.*$/
